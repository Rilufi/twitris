name: tetrier


on:
  workflow_run:
    workflows: ["tweet"]
    types:
      - completed

jobs:
  tweet:
    name: Tweet
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõé
        uses: actions/checkout@v2
        
      - name: Keep this repo alive
        uses: gautamkrishnar/keepalive-workflow@master

      - name: Set up Python üêç
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Cache Python packages üíæ
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install packages ‚öô
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Use HEREDOC for `run` to escape possible single and double quotes in the message.
      - name: comment Tetris next move üê¶
        env:
                  TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}

                  TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}

                  TWITTER_ACCESS_TOKEN_KEY: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }}

                  TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

                  CONSUMER_KEY_XAME: ${{ secrets.CONSUMER_KEY_XAME }}

                  CONSUMER_SECRET_XAME: ${{ secrets.CONSUMER_SECRET_XAME }}

                  ACCESS_TOKEN_XAME: ${{ secrets.ACCESS_TOKEN_XAME }}

                  ACCESS_TOKEN_SECRET_XAME: ${{ secrets.ACCESS_TOKEN_SECRET_XAME }}

                  CONSUMER_KEY_COR: ${{ secrets.CONSUMER_KEY_COR }}

                  CONSUMER_SECRET_COR: ${{ secrets.CONSUMER_SECRET_COR }}

                  ACCESS_TOKEN_COR: ${{ secrets.ACCESS_TOKEN_COR }}

                  ACCESS_TOKEN_SECRET_COR: ${{ secrets.ACCESS_TOKEN_SECRET_COR }}

                  CONSUMER_KEY_GATO: ${{ secrets.CONSUMER_KEY_GATO }}

                  CONSUMER_SECRET_GATO: ${{ secrets.CONSUMER_SECRET_GATO }}

                  ACCESS_TOKEN_GATO: ${{ secrets.ACCESS_TOKEN_GATO }}

                  ACCESS_TOKEN_SECRET_GATO: ${{ secrets.ACCESS_TOKEN_SECRET_GATO }}

                  CONSUMER_KEY_NASO: ${{ secrets.CONSUMER_KEY_NASO }}

                  CONSUMER_SECRET_NASO: ${{ secrets.CONSUMER_SECRET_NASO }}

                  ACCESS_TOKEN_NASO: ${{ secrets.ACCESS_TOKEN_NASO }}

                  ACCESS_TOKEN_SECRET_NASO: ${{ secrets.ACCESS_TOKEN_SECRET_NASO }}

                  CONSUMER_KEY_MEVU: ${{ secrets.CONSUMER_KEY_MEVU }}

                  CONSUMER_SECRET_MEVU: ${{ secrets.CONSUMER_SECRET_MEVU }}

                  ACCESS_TOKEN_MEVU: ${{ secrets.ACCESS_TOKEN_MEVU }}

                  ACCESS_TOKEN_SECRET_MEVU: ${{ secrets.ACCESS_TOKEN_SECRET_MEVU }}

                  CONSUMER_KEY_UVA: ${{ secrets.CONSUMER_KEY_UVA }}

                  CONSUMER_SECRET_UVA: ${{ secrets.CONSUMER_SECRET_UVA }}

                  ACCESS_TOKEN_UVA: ${{ secrets.ACCESS_TOKEN_UVA }}

                  ACCESS_TOKEN_SECRET_UVA: ${{ secrets.ACCESS_TOKEN_SECRET_UVA }}

        run: python tetrier.py
